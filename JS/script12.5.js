/*
 * –¢–∏–ø—ñ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –≤—Å—å–æ–≥–æ –¥–≤–∞:
 * - –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è (deposit)
 * - –∑–Ω—è—Ç—Ç—è (withdraw)
 */
const Transaction = {
  DEPOSIT: "deposit",
  WITHDRAW: "withdraw",
};

/*
 * –ö–æ–∂–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è ‚Äî —Ü–µ –æ–±'—î–∫—Ç –∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏:
 * id, type, amount
 */
const account = {
  // –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å —Ä–∞—Ö—É–Ω–∫—É
  balance: 0,

  // –Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
  transactions: [],

  /*
   * –ú–µ—Ç–æ–¥ —Å—Ç–≤–æ—Ä—é—î —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
   * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —ñ —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
   */
  createTransaction(amount, type) {
    return {
      id: this.transactions.length + 1,
      type,
      amount,
    };
  },

  /*
   * –ú–µ—Ç–æ–¥ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å—É–º–∏ –¥–æ –±–∞–ª–∞–Ω—Å—É.
   * –í–∏–∫–ª–∏–∫–∞—î createTransaction —ñ –¥–æ–¥–∞—î —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó.
   */
  deposit(amount) {
    const transaction = this.createTransaction(amount, Transaction.DEPOSIT);
    const { amount: sum } = transaction; // –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è
    this.balance += sum;
    this.transactions.push({ ...transaction });
  },

  /*
   * –ú–µ—Ç–æ–¥ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –∑–Ω—è—Ç—Ç—è —Å—É–º–∏ –∑ –±–∞–ª–∞–Ω—Å—É.
   * –Ø–∫—â–æ –∫–æ—à—Ç—ñ–≤ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ ‚Äî –≤–∏–≤–æ–¥–∏—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
   */
  withdraw(amount) {
    const { balance } = this; // –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è
    if (amount > balance) {
      console.log("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –¥–ª—è –∑–Ω—è—Ç—Ç—è!");
      return;
    }

    const transaction = this.createTransaction(amount, Transaction.WITHDRAW);
    const { amount: sum } = transaction;
    this.balance -= sum;
    this.transactions.push({ ...transaction });
  },

  /*
   * –ú–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å.
   */
  getBalance() {
    const { balance } = this;
    return balance;
  },

  /*
   * –ú–µ—Ç–æ–¥ —à—É–∫–∞—î —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –ø–æ id.
   */
  getTransactionDetails(id) {
    const { transactions } = this;
    return transactions.find(({ id: transId }) => transId === id) || null;
  },

  /*
   * –ú–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—à—Ç—ñ–≤ –ø–µ–≤–Ω–æ–≥–æ —Ç–∏–ø—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
   */
  getTransactionTotal(type) {
    const { transactions } = this;
    return transactions
      .filter(({ type: t }) => t === type)
      .reduce((total, { amount }) => total + amount, 0);
  },
};

/* üîπ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–æ–±–æ—Ç–∏ */
account.deposit(1000);
account.withdraw(300);
account.deposit(700);
account.withdraw(1200); // –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤

console.log("\nüí∞ –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å:", account.getBalance());
console.log("üìú –Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:", account.transactions);
console.log("üîç –î–µ—Ç–∞–ª—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó #2:", account.getTransactionDetails(2));
console.log("‚ûï –°—É–º–∞ –ø–æ–ø–æ–≤–Ω–µ–Ω—å:", account.getTransactionTotal(Transaction.DEPOSIT));
console.log("‚ûñ –°—É–º–∞ –∑–Ω—è—Ç—Ç—è:", account.getTransactionTotal(Transaction.WITHDRAW));
